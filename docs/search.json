[
  {
    "objectID": "practice1.html",
    "href": "practice1.html",
    "title": "",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.io as pio\n\nimport json \nimport requests\n\n\npd.options.plotting.backend = \"plotly\"\npio.templates.default = \"plotly_white\"\n\n\nglobal_dict = json.loads(requests.get('https://raw.githubusercontent.com/southkorea/southkorea-maps/master/kostat/2018/json/skorea-provinces-2018-geo.json').text)\nlocal_dict = json.loads(requests.get('https://raw.githubusercontent.com/southkorea/southkorea-maps/master/kostat/2018/json/skorea-municipalities-2018-geo.json').text)\n\nurl = 'https://raw.githubusercontent.com/guebin/DV2022/main/posts/Energy/{}.csv'\nprov = ['Seoul', 'Busan', 'Daegu', 'Incheon', \n        'Gwangju', 'Daejeon', 'Ulsan', 'Sejongsi', \n        'Gyeonggi-do', 'Gangwon-do', 'Chungcheongbuk-do', \n        'Chungcheongnam-do', 'Jeollabuk-do', 'Jeollanam-do', \n        'Gyeongsangbuk-do', 'Gyeongsangnam-do', 'Jeju-do']\ndf = pd.concat([pd.read_csv(url.format(p+y)).assign(년도=y, 시도=p) for p in prov for y in ['2018', '2019', '2020', '2021']]).reset_index(drop=True)\\\n.assign(년도 = lambda df: df.년도.astype(int))\\\n.set_index(['년도','시도','지역']).applymap(lambda x: int(str(x).replace(',','')))\\\n.reset_index()\ndf.head()\n\n/tmp/ipykernel_1672/712135142.py:12: FutureWarning:\n\nDataFrame.applymap has been deprecated. Use DataFrame.map instead.\n\n\n\n\n\n\n\n\n\n\n년도\n시도\n지역\n건물동수\n연면적\n에너지사용량(TOE)/전기\n에너지사용량(TOE)/도시가스\n에너지사용량(TOE)/지역난방\n\n\n\n\n0\n2018\nSeoul\n종로구\n17929\n9141777\n64818\n82015\n111\n\n\n1\n2018\nSeoul\n중구\n10598\n10056233\n81672\n75260\n563\n\n\n2\n2018\nSeoul\n용산구\n17201\n10639652\n52659\n85220\n12043\n\n\n3\n2018\nSeoul\n성동구\n14180\n11631770\n60559\n107416\n0\n\n\n4\n2018\nSeoul\n광진구\n21520\n12054796\n70609\n130308\n0\n\n\n\n\n\n\n\n\n#global_dict 내의 영어이름과 df의 영어이름이 일치하는지 확인\nset(df.시도) == {l['properties']['name_eng'] for l in global_dict['features']}\n\nTrue\n\n\n\n#global_dict내의 영어이름과 한글이름을 이용해 변환을 위한 dictionary 생성\n{l['properties']['name_eng']:l['properties']['name'] for l in global_dict['features']}\n\n{'Seoul': '서울특별시',\n 'Busan': '부산광역시',\n 'Daegu': '대구광역시',\n 'Incheon': '인천광역시',\n 'Gwangju': '광주광역시',\n 'Daejeon': '대전광역시',\n 'Ulsan': '울산광역시',\n 'Sejongsi': '세종특별자치시',\n 'Gyeonggi-do': '경기도',\n 'Gangwon-do': '강원도',\n 'Chungcheongbuk-do': '충청북도',\n 'Chungcheongnam-do': '충청남도',\n 'Jeollabuk-do': '전라북도',\n 'Jeollanam-do': '전라남도',\n 'Gyeongsangbuk-do': '경상북도',\n 'Gyeongsangnam-do': '경상남도',\n 'Jeju-do': '제주특별자치도'}\n\n\n\n#영어지명을 한글지명으로\ndf.assign(\n    시도 = lambda df: df.시도.map({l['properties']['name_eng']:l['properties']['name'] for l in global_dict['features']})\n)\n\n\n\n\n\n\n\n\n년도\n시도\n지역\n건물동수\n연면적\n에너지사용량(TOE)/전기\n에너지사용량(TOE)/도시가스\n에너지사용량(TOE)/지역난방\n\n\n\n\n0\n2018\n서울특별시\n종로구\n17929\n9141777\n64818\n82015\n111\n\n\n1\n2018\n서울특별시\n중구\n10598\n10056233\n81672\n75260\n563\n\n\n2\n2018\n서울특별시\n용산구\n17201\n10639652\n52659\n85220\n12043\n\n\n3\n2018\n서울특별시\n성동구\n14180\n11631770\n60559\n107416\n0\n\n\n4\n2018\n서울특별시\n광진구\n21520\n12054796\n70609\n130308\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n995\n2019\n제주특별자치도\n서귀포시\n34729\n7233931\n34641\n1306\n0\n\n\n996\n2020\n제주특별자치도\n제주시\n66504\n19819923\n99212\n22179\n0\n\n\n997\n2020\n제주특별자치도\n서귀포시\n34880\n7330040\n35510\n1639\n0\n\n\n998\n2021\n제주특별자치도\n제주시\n67053\n20275738\n103217\n25689\n0\n\n\n999\n2021\n제주특별자치도\n서귀포시\n35230\n7512206\n37884\n2641\n0\n\n\n\n\n1000 rows × 8 columns\n\n\n\n\n#local_dict와 global_dict의 지명정보를 정리하여 데이터프레임으로 만듦\ndf_global = pd.DataFrame([l['properties'] for l in global_dict['features']])\ndf_local = pd.DataFrame([l['properties'] for l in local_dict['features']])\n\n\ndf_local\n\n\n\n\n\n\n\n\nname\nbase_year\nname_eng\ncode\n\n\n\n\n0\n종로구\n2018\nJongno-gu\n11010\n\n\n1\n중구\n2018\nJung-gu\n11020\n\n\n2\n용산구\n2018\nYongsan-gu\n11030\n\n\n3\n성동구\n2018\nSeongdong-gu\n11040\n\n\n4\n광진구\n2018\nGwangjin-gu\n11050\n\n\n...\n...\n...\n...\n...\n\n\n245\n함양군\n2018\nHamyang-gun\n38380\n\n\n246\n거창군\n2018\nGeochang-gun\n38390\n\n\n247\n합천군\n2018\nHapcheon-gun\n38400\n\n\n248\n제주시\n2018\nJeju-si\n39010\n\n\n249\n서귀포시\n2018\nSeogwipo-si\n39020\n\n\n\n\n250 rows × 4 columns\n\n\n\n\n#df_local에서 “전주시완산구”와 같이 정리된 지명들을 “완산구”로 변환\ndf_local.set_index('name')\\\n.rename(\n    {name:name.split('시')[-1] for name in df_local['name'] if ('시' in name) and ('구' in name) and (len(name)&gt;3)}\n).reset_index()\n\n\n\n\n\n\n\n\nname\nbase_year\nname_eng\ncode\n\n\n\n\n0\n종로구\n2018\nJongno-gu\n11010\n\n\n1\n중구\n2018\nJung-gu\n11020\n\n\n2\n용산구\n2018\nYongsan-gu\n11030\n\n\n3\n성동구\n2018\nSeongdong-gu\n11040\n\n\n4\n광진구\n2018\nGwangjin-gu\n11050\n\n\n...\n...\n...\n...\n...\n\n\n245\n함양군\n2018\nHamyang-gun\n38380\n\n\n246\n거창군\n2018\nGeochang-gun\n38390\n\n\n247\n합천군\n2018\nHapcheon-gun\n38400\n\n\n248\n제주시\n2018\nJeju-si\n39010\n\n\n249\n서귀포시\n2018\nSeogwipo-si\n39020\n\n\n\n\n250 rows × 4 columns\n\n\n\n\n#df_local과 df_global의 정보를 정리하여 merge, 합쳐진 정보를 df_json에 저장\ndf_json = df_local.set_index('name')\\\n.rename(\n    {name:name.split('시')[-1] for name in df_local['name'] if ('시' in name) and ('구' in name) and (len(name)&gt;3)}\n).reset_index()\\\n.drop(['base_year','name_eng'],axis=1)\\\n.rename({'name':'name_local','code':'code_local'},axis=1)\\\n.assign(code = lambda df: df['code_local'].str[:2])\\\n.merge(df_global.drop(['base_year','name_eng'],axis=1))\ndf_json\n\n\n\n\n\n\n\n\nname_local\ncode_local\ncode\nname\n\n\n\n\n0\n종로구\n11010\n11\n서울특별시\n\n\n1\n중구\n11020\n11\n서울특별시\n\n\n2\n용산구\n11030\n11\n서울특별시\n\n\n3\n성동구\n11040\n11\n서울특별시\n\n\n4\n광진구\n11050\n11\n서울특별시\n\n\n...\n...\n...\n...\n...\n\n\n245\n함양군\n38380\n38\n경상남도\n\n\n246\n거창군\n38390\n38\n경상남도\n\n\n247\n합천군\n38400\n38\n경상남도\n\n\n248\n제주시\n39010\n39\n제주특별자치도\n\n\n249\n서귀포시\n39020\n39\n제주특별자치도\n\n\n\n\n250 rows × 4 columns\n\n\n\n\n#df_json과 df의 정보를 merge하기 위하여 ’서울특별시-종로구’와 같은 형식으로 공통열을 각각 생성. 생성된 공통열의 원소가 일치하는지 비교\ndf_left = df.assign(\n    시도 = lambda df: df.시도.map({l['properties']['name_eng']:l['properties']['name'] for l in global_dict['features']})\n).assign(on = lambda df: df.시도 + '-' + df.지역)\ndf_left\n\n\n\n\n\n\n\n\n년도\n시도\n지역\n건물동수\n연면적\n에너지사용량(TOE)/전기\n에너지사용량(TOE)/도시가스\n에너지사용량(TOE)/지역난방\non\n\n\n\n\n0\n2018\n서울특별시\n종로구\n17929\n9141777\n64818\n82015\n111\n서울특별시-종로구\n\n\n1\n2018\n서울특별시\n중구\n10598\n10056233\n81672\n75260\n563\n서울특별시-중구\n\n\n2\n2018\n서울특별시\n용산구\n17201\n10639652\n52659\n85220\n12043\n서울특별시-용산구\n\n\n3\n2018\n서울특별시\n성동구\n14180\n11631770\n60559\n107416\n0\n서울특별시-성동구\n\n\n4\n2018\n서울특별시\n광진구\n21520\n12054796\n70609\n130308\n0\n서울특별시-광진구\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n995\n2019\n제주특별자치도\n서귀포시\n34729\n7233931\n34641\n1306\n0\n제주특별자치도-서귀포시\n\n\n996\n2020\n제주특별자치도\n제주시\n66504\n19819923\n99212\n22179\n0\n제주특별자치도-제주시\n\n\n997\n2020\n제주특별자치도\n서귀포시\n34880\n7330040\n35510\n1639\n0\n제주특별자치도-서귀포시\n\n\n998\n2021\n제주특별자치도\n제주시\n67053\n20275738\n103217\n25689\n0\n제주특별자치도-제주시\n\n\n999\n2021\n제주특별자치도\n서귀포시\n35230\n7512206\n37884\n2641\n0\n제주특별자치도-서귀포시\n\n\n\n\n1000 rows × 9 columns\n\n\n\n\ndf_right = df_json.assign(on = lambda df: df.name + '-' + df.name_local)\\\n.drop(['name_local','name'],axis=1)\ndf_right\n\n\n\n\n\n\n\n\ncode_local\ncode\non\n\n\n\n\n0\n11010\n11\n서울특별시-종로구\n\n\n1\n11020\n11\n서울특별시-중구\n\n\n2\n11030\n11\n서울특별시-용산구\n\n\n3\n11040\n11\n서울특별시-성동구\n\n\n4\n11050\n11\n서울특별시-광진구\n\n\n...\n...\n...\n...\n\n\n245\n38380\n38\n경상남도-함양군\n\n\n246\n38390\n38\n경상남도-거창군\n\n\n247\n38400\n38\n경상남도-합천군\n\n\n248\n39010\n39\n제주특별자치도-제주시\n\n\n249\n39020\n39\n제주특별자치도-서귀포시\n\n\n\n\n250 rows × 3 columns\n\n\n\n\ndf_right.set_index('on')\\\n.rename({'인천광역시-남구':'인천광역시-미추홀구'})\\\n.reset_index()\n\n\n\n\n\n\n\n\non\ncode_local\ncode\n\n\n\n\n0\n서울특별시-종로구\n11010\n11\n\n\n1\n서울특별시-중구\n11020\n11\n\n\n2\n서울특별시-용산구\n11030\n11\n\n\n3\n서울특별시-성동구\n11040\n11\n\n\n4\n서울특별시-광진구\n11050\n11\n\n\n...\n...\n...\n...\n\n\n245\n경상남도-함양군\n38380\n38\n\n\n246\n경상남도-거창군\n38390\n38\n\n\n247\n경상남도-합천군\n38400\n38\n\n\n248\n제주특별자치도-제주시\n39010\n39\n\n\n249\n제주특별자치도-서귀포시\n39020\n39\n\n\n\n\n250 rows × 3 columns\n\n\n\n\n#데이터프레임 결합\ndf2 = df_left.merge(\n    df_right.set_index('on')\\\n    .rename({'인천광역시-남구':'인천광역시-미추홀구'})\\\n    .reset_index()\n).drop(['on'],axis=1)\ndf2\n\n\n\n\n\n\n\n\n년도\n시도\n지역\n건물동수\n연면적\n에너지사용량(TOE)/전기\n에너지사용량(TOE)/도시가스\n에너지사용량(TOE)/지역난방\ncode_local\ncode\n\n\n\n\n0\n2018\n서울특별시\n종로구\n17929\n9141777\n64818\n82015\n111\n11010\n11\n\n\n1\n2019\n서울특별시\n종로구\n17851\n9204140\n63492\n76653\n799\n11010\n11\n\n\n2\n2020\n서울특별시\n종로구\n17638\n9148895\n60123\n71263\n912\n11010\n11\n\n\n3\n2021\n서울특별시\n종로구\n22845\n18551145\n125179\n117061\n0\n11010\n11\n\n\n4\n2018\n서울특별시\n중구\n10598\n10056233\n81672\n75260\n563\n11020\n11\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n867\n2021\n제주특별자치도\n제주시\n67053\n20275738\n103217\n25689\n0\n39010\n39\n\n\n868\n2018\n제주특별자치도\n서귀포시\n34154\n6914685\n34470\n1597\n0\n39020\n39\n\n\n869\n2019\n제주특별자치도\n서귀포시\n34729\n7233931\n34641\n1306\n0\n39020\n39\n\n\n870\n2020\n제주특별자치도\n서귀포시\n34880\n7330040\n35510\n1639\n0\n39020\n39\n\n\n871\n2021\n제주특별자치도\n서귀포시\n35230\n7512206\n37884\n2641\n0\n39020\n39\n\n\n\n\n872 rows × 10 columns\n\n\n\n\n#시각화 (2018년도 전기에너지 사용량)\npx.choropleth_mapbox(\n    geojson = local_dict,\n    featureidkey = 'properties.code',\n    data_frame = df2.query('년도 == 2018'),\n    locations = 'code_local',\n    color = '에너지사용량(TOE)/전기',\n    hover_data = ['시도','지역'],\n    #---#\n    mapbox_style=\"carto-positron\",\n    center={\"lat\": 36, \"lon\": 127.5}, \n    zoom=6,\n    height=800,\n    width=800    \n)\n\n                                                \n\n\n\n#시각화(2018~2021년도 전기에너지 사용량)\nseoul_dict = local_dict.copy() \nseoul_dict['features'] = [l for l in seoul_dict['features'] if l['properties']['code'][:2] == '11']\n\n\npx.choropleth_mapbox(\n    geojson = seoul_dict,\n    featureidkey = 'properties.code',\n    data_frame = df2,\n    locations = 'code_local',\n    color = '에너지사용량(TOE)/전기',\n    animation_frame= '년도',\n    hover_data = ['시도','지역'],\n    #---#\n    mapbox_style=\"carto-positron\",\n    range_color = [0,400000],\n    center={\"lat\": 37.5642135, \"lon\": 127.0016985},\n    zoom=9,\n    height=500,\n    width=700    \n)"
  },
  {
    "objectID": "practice2.html",
    "href": "practice2.html",
    "title": "",
    "section": "",
    "text": "{ “cells”: [ { “cell_type”: “code”, “execution_count”: null, “id”: “6228178b-b6ed-44bf-b1bc-24c784aa3641”, “metadata”: {}, “outputs”: [], “source”: [ “—”, “title: \"대전 시각화\"”, “author: \"이유리\"”, “format: dashboard”, “execute: ”, ” enabled: true“,” cache: false“,” freeze: false“,” error: true“,”—“,”“,”{python}\\n\",     \"import numpy as np\\n\",     \"import pandas as pd\\n\",     \"import plotly.express as px\\n\",     \"import plotly.io as pio\\n\",     \"import json\\n\",     \"import requests\\n\",     \"import folium\\n\",     \"\\n\",     \"pd.options.plotting.backend = \\\"plotly\\\"\\n\",     \"pio.templates.default = \\\"plotly_white\\\"\\n\",     \"\\n\",     \"df = pd.read_csv('https://raw.githubusercontent.com/guebin/2021DV/master/_notebooks/2021-11-22-muni.csv')[67:72].reset_index(drop=True)\\n\",     \"local_dict = json.loads(requests.get('https://raw.githubusercontent.com/southkorea/southkorea-maps/master/kostat/2018/json/skorea-municipalities-2018-geo.json').text)\\n\",     \"daejeon_dict = local_dict.copy() \\n\",     \"daejeon_dict['features'] = [l for l in local_dict['features'] if l['properties']['code'][:2] == '25']\\n\",     \"\\n\",     \"m = folium.Map(\\n\",     \"    location = [36.34913,127.3849],\\n\",     \"    zoom_start = 10,\\n\",     \"    scrollWheelZoom = False\\n\",     \")\\n\",     \"\\n\",     \"folium.Choropleth(\\n\",     \"    geo_data=daejeon_dict,\\n\",     \"    key_on='feature.properties.name',\\n\",     \"    data=df,\\n\",     \"    columns=['행정구역(시군구)별', '총인구수 (명)']\\n\",     \").add_to(m)\\n\",     \"m\\n\",     \"” ] }, { “cell_type”: “code”, “execution_count”: 2, “id”: “66489062-a54f-4b67-9799-32d06f545b21”, “metadata”: {}, “outputs”: [ { “data”: { “text/html”: [ “], “text/plain”: [ “&lt;folium.folium.Map at 0x7f6049531390&gt;” ] }, “execution_count”: 2, “metadata”: {}, “output_type”: “execute_result” } ], “source”: [ “import numpy as np”, “import pandas as pd”, “import plotly.express as px”, “import plotly.io as pio”, “import json”, “import requests”, “import folium”, “”, “pd.options.plotting.backend = \"plotly\"”, “pio.templates.default = \"plotly_white\"”, “”, “df = pd.read_csv(’https://raw.githubusercontent.com/guebin/2021DV/master/_notebooks/2021-11-22-muni.csv’)[67:72].reset_index(drop=True)“,”local_dict = json.loads(requests.get(‘https://raw.githubusercontent.com/southkorea/southkorea-maps/master/kostat/2018/json/skorea-municipalities-2018-geo.json’).text)“,”daejeon_dict = local_dict.copy() “,”daejeon_dict[‘features’] = [l for l in local_dict[‘features’] if l[‘properties’][‘code’][:2] == ‘25’]“,”“,”m = folium.Map(“,” location = [36.34913,127.3849],“,” zoom_start = 10,“,” scrollWheelZoom = False“,”)“,”“,”folium.Choropleth(“,” geo_data=daejeon_dict,“,” key_on=‘feature.properties.name’,“,” data=df,“,” columns=[‘행정구역(시군구)별’, ‘총인구수 (명)’]“,”).add_to(m)“,”m” ] } ], “metadata”: { “kernelspec”: { “display_name”: “Python 3 (ipykernel)”, “language”: “python”, “name”: “python3” }, “language_info”: { “codemirror_mode”: { “name”: “ipython”, “version”: 3 }, “file_extension”: “.py”, “mimetype”: “text/x-python”, “name”: “python”, “nbconvert_exporter”: “python”, “pygments_lexer”: “ipython3”, “version”: “3.10.13” } }, “nbformat”: 4, “nbformat_minor”: 5 }"
  },
  {
    "objectID": "practice3.html",
    "href": "practice3.html",
    "title": "",
    "section": "",
    "text": "{ “cells”: [ { “cell_type”: “code”, “execution_count”: null, “id”: “e529b1f4-dddb-4de9-b573-71481924081e”, “metadata”: {}, “outputs”: [], “source”: [ “—”, “title: \"NYCTaxi\"”, “author: \"최규빈(2021-43052)\"”, “format: dashboard”, “execute: ”, ” enabled: true“,” cache: false“,” freeze: false“,”—“,”“,”{python}\\n\",     \"#| output: false\\n\",     \"import numpy as np\\n\",     \"import pandas as pd\\n\",     \"import plotly.express as px\\n\",     \"import plotly.io as pio\\n\",     \"\\n\",     \"pd.options.plotting.backend = \\\"plotly\\\"\\n\",     \"pio.templates.default = \\\"plotly_white\\\"\\n\",     \"\\n\",     \"nyc_landmarks = {\\n\",     \"    \\\"Name\\\": [\\\"Wall Street\\\", \\\"Midtown Manhattan\\\", \\\"Times Square\\\", \\n\",     \"             \\\"Central Park\\\", \\\"Statue of Liberty\\\", \\\"Forest Park\\\", \\\"Citi Field\\\"],\\n\",     \"    \\\"Latitude\\\": [40.7074, 40.7549, 40.7580, 40.785091, 40.6892, 40.7028, 40.7571],\\n\",     \"    \\\"Longitude\\\": [-74.0113, -73.9840, -73.9855, -73.968285, -74.0445, -73.8495, -73.8458]\\n\",     \"}\\n\",     \"\\n\",     \"df_nyc_landmarks = pd.DataFrame(nyc_landmarks)\\n\",     \"\\n\",     \"fig1 = px.scatter_mapbox(\\n\",     \"    data_frame = df_nyc_landmarks,\\n\",     \"    lat = 'Latitude',\\n\",     \"    lon = 'Longitude',\\n\",     \"    hover_data = 'Name',\\n\",     \"    #---#\\n\",     \"    mapbox_style = 'carto-positron',\\n\",     \"    zoom=10,\\n\",     \"    width=750,\\n\",     \"    height=600\\n\",     \")\\n\",     \"fig1.update_traces(\\n\",     \"    marker = {\\n\",     \"        'size':15, \\n\",     \"        'color': 'red', \\n\",     \"        'opacity':0.5\\n\",     \"    }\\n\",     \")\\n\",     \"# 1-(1),(2),(3) 에 대응하는 plotly figure를 아래와 같은 이름으로 저장\\n\",     \"# fig3 = ...\\n\",     \"“,”“,”{python}\\n\",     \"#| title: 속력별 경로 시각화\\n\",     \"fig1.show(config={'scrollZoom':False})\\n\",     \"” ] } ], “metadata”: { “kernelspec”: { “display_name”: “Python 3 (ipykernel)”, “language”: “python”, “name”: “python3” }, “language_info”: { “codemirror_mode”: { “name”: “ipython”, “version”: 3 }, “file_extension”: “.py”, “mimetype”: “text/x-python”, “name”: “python”, “nbconvert_exporter”: “python”, “pygments_lexer”: “ipython3”, “version”: “3.10.13” } }, “nbformat”: 4, “nbformat_minor”: 5 }"
  }
]